record.control
record.bitrate
record.encoder
record.resolution
ndi-rtsp.control
ndi-rtsp.bitrate
ndi-rtsp.encoder
ndi-rtsp.resolution
hdmi.output.resolution
usb.mode
audio.input.source
audio.input.volume
audio.input.mute
audio.input.enc
audio.input.agc
ai.workmode
ai.trackspeed
ai.gesturecontrol.lockedtarget
ai.gesturecontrol.recording
ai.gesturecontrol.zoom
ai.gesturecontrol.zoomfactor
ai.gesturecontrol.dynamiczoom
ai.gesturecontrol.dynamiczoomdirection
image.hdr.control
image.af.mode
image.af.trackmode
image.af.motorposition
image.af.windowcenter
image.exposure.mode
image.exposure.auto.mode
image.exposure.auto.compensation
image.exposure.auto.isorange
image.exposure.auto.lock
image.exposure.manual.shuttertime
image.exposure.manual.iso
image.exposure.antiflick.mode
image.whitebalance.config
image.style.mode
ptz.gimbalinvert
ptz.zoom
ptz.preset
album.filelist





function OB(e) {
  return fr.post('/camera/sdk/gimbal_speed', e)
}
function $B(e) {
  return fr.post('/camera/sdk/zoom', e)
}
function DB(e) {
  return fr.post('/camera/sdk/trigger_preset', e)
}
function IB(e) {
  return fr.post('/camera/sdk/preset', e)
}
function AB(e) {
  return fr.delete('/camera/sdk/preset', {
    data: e
  })
}
function MB(e) {
  return fr.put('/camera/sdk/preset_rename', e)
}
function LB(e) {
  return fr.put('/camera/sdk/preset', e)
}
function FB(e) {
  return fr.post('/camera/sdk/af', e)
}
function zB(e) {
  return fr.post('/camera/sdk/mf_position', e)
}
function NB(e) {
  return fr.post('/camera/sdk/ai_trace', e)
}
function HB(e) {
  return fr.post('/camera/sdk/capture', e)
}
function BB(e) {
  return fr.post('/camera/sdk/record', e)
}
function WB(e) {
  return fr.post('/camera/sdk/key_verify', e)
}
function jB(e) {
  return fr.get('/camera/sdk/networkconfig', {
    params: e
  })
}
function UB(e, t) {
  return fr.post('/camera/sdk/networkconfig', e, t)
}
function Gz(e) {
  return {
    access_token: 'abc123'
  }
}
function qz(e) {
  return fr.post('/camera/sdk/sdcard_format', e)
}




wsData: {
        af_mode: ey.AFC,
        capture: !1,
        mf_position: 50,
        preset_cnt: [],
        ratio: 1,
        record: !1,
        target: ty.NONE,
        sdcard: {
          status: nn.NOT_PLUGGED_IN,
          format: Ql.UNKNOWN,
          total: 0,
          available: 0,
          sdcard_speed: va.M_4_10,
          avail_time: 0
        }


        var ey = (e => (e[e.AFC = 1] = 'AFC', e[e.AFS = 2] = 'AFS', e[e.MF = 3] = 'MF', e)) (ey || {
}),
ty = (
  e => (
    e[e.NONE = 0] = 'NONE',
    e[e.HUMAN = 1] = 'HUMAN',
    e[e.ANIMAL = 2] = 'ANIMAL',
    e
  )
) (ty || {
});
const VB = [
  {
    label: 'no_target',
    value: 0,
    hidden: !0
  },
  {
    label: 'ok_human',
    value: 1
  },
  {
    label: 'ok_animal',
    value: 2
  }
];
var dN = (
  e => (
    e[e.F_60 = 0] = 'F_60',
    e[e.F_59_94 = 1] = 'F_59_94',
    e[e.F_50 = 2] = 'F_50',
    e[e.F_48 = 3] = 'F_48',
    e[e.F_30 = 4] = 'F_30',
    e[e.F_29_97 = 5] = 'F_29_97',
    e[e.F_25 = 6] = 'F_25',
    e[e.F_24 = 7] = 'F_24',
    e
  )
) (dN || {
}),
fN = (
  e => (
    e[e.R_3840X2160 = 0] = 'R_3840X2160',
    e[e.R_1920X1080 = 1] = 'R_1920X1080',
    e[e.R_1280X720 = 2] = 'R_1280X720',
    e
  )
)


							Wa.emit(Mo.TOAST_HANDLE, _),
								e.isPauseUpdateAiTrace || f('target', _.target),
								f('af_mode', _.af_mode),
								f('mf_position', _.mf_position),
								f('capture', _.capture),
								f('record', _.record),
								f('sdcard', _.sdcard),
								_.iszoom || f('ratio', Number(_.ratio.toFixed(2))),
								f('preset_cnt', _.preset_cnt || [])


  wsData: {
    af_mode: ey.AFC,           // Autofokus-Modus (Enum)
    capture: false,            // Aufnahme läuft?
    mf_position: 50,           // Manueller Fokus-Position (0-100)
    preset_cnt: [],            // Preset-Positionen
    ratio: 1,                  // Seitenverhältnis
    record: false,             // Aufnahme läuft?
    target: ty.NONE,           // Zieltyp (Enum)
    sdcard: {
        status: nn.NOT_PLUGGED_IN, // SD-Kartenstatus (Enum)
        format: Ql.UNKNOWN,        // SD-Kartenformat (Enum)
        total: 0,                  // Gesamtkapazität
        available: 0,              // Verfügbarer Speicher
        sdcard_speed: va.M_4_10,   // Schreibgeschwindigkeit (Enum)
        avail_time: 0,             // Verfügbare Aufnahmezeit
    },
}

var ey = { AFC: 1, AFS: 2, MF: 3 }
var ty = { NONE: 0, HUMAN: 1, ANIMAL: 2 }
var nn = {
    NOT_PLUGGED_IN: 0,
    PREPARING: 1,
    PLUGGED_IN: 2,
    NO_ENOUGH_SPACE: 3,
    FS_NOT_SUPPORTED: 4,
    FS_ERROR: 5,
    INITIALIZING: 6,
    READONLY: 7,
    NO_PARTED: 8,
    UNKNOWN_ERROR: 255,
}
var Ql = { UNKNOWN: 0, FAT32: 1, EXFAT: 2 }
var va = {
    M_1_4: 0,
    M_4_10: 1,
    M_10_30: 2,
    M_30_50: 3,
    M_50_100: 4,
    M_100: 5,
}
